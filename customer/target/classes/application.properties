server.port=8090
server.servlet.context-path=/customer


spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/customer
spring.datasource.username=admin
spring.datasource.password=admin

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (none, create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = none

#Enable liquibase
#spring.liquibase.enabled=true


spring.application.name=Customer



spring.security.oauth2.resourceserver.jwt.issuer-uri=http://identity/realms/Identity
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://identity/realms/Identity/protocol/openid-connect/certs

keycloak.auth-server-url=http://identity
keycloak.realm=Identity
keycloak.resource=customer-management
keycloak.credentials.secret=CPFO508oyh4zgnEpzNjhFZbdzwXOwLcP



springdoc.swagger-ui.path=/swagger-ui
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.client-id=customer
#springdoc.oauthflow.authorization-url=http://localhost:8080/realms/master/protocol/openid-connect/auth
#springdoc.oauthflow.token-url=http://localhost:8080/realms/master/protocol/openid-connect/token



cors.allowed-origins=*


