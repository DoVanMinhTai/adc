server.port=8080
server.servlet.context-path=/product
spring.threads.virtual.enabled=true
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/book
spring.datasource.username=admin
spring.datasource.password=admin


# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (none, create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
#to show sql
spring.jpa.properties.hibernate.show_sql=true
#formatting
spring.jpa.properties.hibernate.format_sql=true

#Enable liquibase
spring.liquibase.enabled=true

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://identity/realms/Identity

# Swagger configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui
springdoc.packages-to-scan=com.adc.product
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.client-id=swagger-ui
springdoc.oauthflow.authorization-url=http://identity/realms/Identity/protocol/openid-connect/auth
springdoc.oauthflow.token-url=http://identity/realms/Identity/protocol/openid-connect/token

adc.services.order=http://localhost:8085/

cors.allowed-origins=*