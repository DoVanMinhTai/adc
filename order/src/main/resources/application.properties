spring.application.name=order
server.servlet.context-path=/orders

server.port=8085
spring.threads.virtual.enabled=true

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://identity/realms/Identity

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/order
spring.datasource.username=admin
spring.datasource.password=admin

adc.services.customer=http://api.adc.local/customer
adc.services.product=http://api.adc.local/product
#adc.services.promotion=http://api.adc.local/promotion

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

# Hibernate ddl auto (none, create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

# Disable open in view transaction
spring.jpa.open-in-view=false

#Enable liquibase
spring.liquibase.enabled=true

springdoc.swagger-ui.path=/swagger-ui
springdoc.packages-to-scan=com.adc.order
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true
springdoc.swagger-ui.oauth.client-id=swagger-ui
springdoc.oauthflow.authorization-url=http://identity/realms/Identity/protocol/openid-connect/auth
springdoc.oauthflow.token-url=http://identity/realms/Identity/protocol/openid-connect/token



